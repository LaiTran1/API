<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestApi</name>
    </assembly>
    <members>
        <member name="M:TestApi.Controllers.ApiController.GetShopTypesAll">
            <summary>
            Retrieves stock items
            </summary>
            <returns>A response with stock items list</returns>
            <response code="200">Returns the stock items list</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:TestApi.Controllers.ApiController.GetShopTypes(TestApi.Models.DataSourceLoadOptions)">
            <summary>
            Retrieves stock items
            </summary>
            <param name="options"></param>
            <returns>A response with stock items list</returns>
            <response code="200">Returns the stock items list</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:TestApi.Controllers.ApiController.GetShopTypeByCode(System.String)">
            <summary>
            Retrieves a stock item by ID
            </summary>
            <param code="code">Stock item id</param>
            <returns>A response with stock item</returns>
            <response code="200">Returns the stock items list</response>
            <response code="404">If stock item is not exists</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:TestApi.Controllers.ApiController.PostShopTypeAsync(TestApi.Models.PostAR_ShopTypeRequests)">
            <summary>
            Creates a new stock item
            </summary>
            <param name="request">Request model</param>
            <returns>A response with new ShopType</returns>
            <response code="200">Returns the stock items list</response>
            <response code="201">A response as creation of stock item</response>
            <response code="400">For bad request</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:TestApi.Controllers.ApiController.PutShopTypeAsync(System.String,TestApi.Models.PutAR_ShopTypeRequest)">
            <summary>
            Updates an existing ShopType
            </summary>
            <param name="code">Stock item ID</param>
            <param name="request">Request model</param>
            <returns>A response as update stock item result</returns>
            <response code="200">If stock item was updated successfully</response>
            <response code="400">For bad request</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:TestApi.Controllers.ApiController.DeleteShopTypeAsync(System.String)">
            <summary>
            Deletes an existing SHOPTYPE
            </summary>
            <param name="code">Stock item ID</param>
            <returns>A response as delete stock item result</returns>
            <response code="200">If stock item was deleted successfully</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:TestApi.Controllers.BatchController.GetBatches(TestApi.Models.DataSourceLoadOptions)">
            <summary>
            Retrieves Batch items
            </summary>
            <param name="options"></param>
            <returns>A response with Batch items list</returns>
            <response code="200">Returns the stock items list</response>
            <response code="500">If there was an internal server error</response>
        </member>
        <member name="M:TestApi.Controllers.BatchController.PutBatch(TestApi.Controllers.BatchController.CompositeBatch)">
            <summary>
            Creates or Update 1 Batch
            </summary>
            <returns>A response message</returns>
        </member>
    </members>
</doc>
